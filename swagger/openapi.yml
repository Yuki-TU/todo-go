openapi: 3.0.0
info:
  version: 1.0.0
  title: todoアプリのREST API
  description: >-
    TODOアプリのサンプルRESTAPI
servers:
  - url: 'http://{host}:8081/api/v1'
    description: go service api server endpoint application
    variables:
      host:
        default: localhost
        enum:
          - localhost
          - heroku.com
paths:
  ############################
  ## REGISTER AUTH ENDPOINT
  ############################
  /users:
    post:
      tags:
        - Auth Endpoint
      summary: 認証して登録
      description: register new users account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: 藤本
                email:
                  type: string
                  format: email
                  example: fujimoto@gmail.com
                password:
                  type: string
                  format: password
                  example: qwerty123456789
              required:
                - fullname
                - email
                - password
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 201
                  method:
                    type: string
                    example: "POST"
                  message:
                    type: string
                    example: "Register new account successfully"
                  data:
                    type: object
                    example: null
                required:
                  - statusCode
                  - method
                  - message
        '400':
          description: |
            JSONデータの解析に失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '403':
          description: |
            ユーザー登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 403
                  method:
                    type: string
                    example: "POST"
                  message:
                    type: string
                    example: "Register new account failed"
                  data:
                    type: object
                    example: null
                required:
                  - statusCode
                  - method
                  - message

        '404':
          description: |
            無効なURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        '409':
          description: |
            メールがドレスが登録済み
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 409
                  method:
                    type: string
                    example: "POST"
                  message:
                    type: string
                    example: "Email already exist"
                  data:
                    type: object
                    example: null
                required:
                  - statusCode
                  - method
                  - message
  #################################
  #################################
  ## COMPONENTS AUTH TERITORY
  #################################
  #################################
components:
  schemas:
    400Error:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
          example: "400"
        method:
          type: string
          example: "GET"
        message: 
          type: string
          example: "無効なリクエストです。"
    404Error:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
          example: "404"
        method:
          type: string
          example: "GET"
        message: 
          type: string
          example: "無効なリクエストです。"
externalDocs:
  description: "Find more about Swagger"
  url: "http://swagger.io"
